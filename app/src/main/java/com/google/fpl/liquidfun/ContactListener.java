/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

import android.util.Log;

import com.example.savethatbridge.gameobjects.GameObject;
import com.example.savethatbridge.generali.Collision;

import java.util.Collection;
import java.util.HashSet;

public class ContactListener {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;
  private Collection<Collision> cache = new HashSet<>();

  public Collection<Collision> getCollisions() {
    Collection<Collision> result = new HashSet<>(cache);
    cache.clear();
    return result;
  }
  protected ContactListener(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ContactListener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_ContactListener(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    liquidfunJNI.ContactListener_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    liquidfunJNI.ContactListener_change_ownership(this, swigCPtr, true);
  }

  public ContactListener() {
    this(liquidfunJNI.new_ContactListener(), true);
    liquidfunJNI.ContactListener_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void beginContact(Contact contact) {
    //Log.d("MyContactListener", "Begin contact");
    Fixture fa = contact.getFixtureA(),
            fb = contact.getFixtureB();
    Body ba = fa.getBody(), bb = fb.getBody();
    Object userdataA = ba.getUserData(), userdataB = bb.getUserData();
    GameObject a = (GameObject)userdataA,
            b = (GameObject)userdataB;

    // TO DO: use an object pool instead
    cache.add(new Collision(a, b)); }
}
